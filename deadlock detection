/**************************

Welcome to GDB Online.
  GDB online is an online compiler and debugger tool for C, C++, Python, PHP, Ruby, 
  C#, OCaml, VB, Perl, Swift, Prolog, Javascript, Pascal, COBOL, HTML, CSS, JS
  Code, Compile, Run and Debug online from anywhere in world.

***************************/
#include <bits/stdc++.h>
using namespace std;
int main()
{
    
     vector<vector<int>> allocated{
        {0, 1, 0},
        {2, 0, 0},
        {3, 0, 3},
        {2, 1, 1},
        {0, 0, 2}
    };
    
    vector<int> available {0,0,0};
    vector<vector<int>> request{
        {0,0,0},
        {2,0,2},
        {0,0,1},
        {1,0,0},
        {0,0,2}
    };
    
    unordered_map<int,int> finished;
    for(int i=0;i<request.size();i++){
        
        if(finished[i] == 1) continue;
        int count = 0;
        for(int j=0;j< 3 ;j++){
            
            //check for allocate criteria
            if(available[j] >= request[i][j]){
                count++;
            }
        
        }
        if(count == 3){
            //sare allocate kr sakte hai resources
            for(int j=0;j<3;j++){
                available[j] += allocated[i][j]; 
            }
            finished[i]=1;
            i=0;
        }
    }
    int flag =0;
    for(auto i:finished){
        cout<<i.first<<" "<<i.second<<endl;
        if(i.second==0){
            flag = 1;
            break;
        }
    }
        if(flag==1){
            cout<<"DEADLOCKKK!!!!"<<endl;
        }else{
            cout<<"HORRAYYY NOOO DEADDLOCKKKKK!!!1"<<endl;
        }
    
    //printing
    
            cout<<"\t";
    cout<<"alloc"<<"\tavail"<<"\treq"<<endl;
    for(int i=0;i<request.size();i++){
        cout<<"P"<<i<<"\t";
        
        for(int j=0;j<allocated[i].size();j++)
            cout<< allocated[i][j] << " ";
            
            cout<<"\t";
        for(int j=0;j<available.size();j++)
            cout<< available[j] << " ";
            cout<<"\t";
        for(int j=0;j<request[i].size();j++)
            cout<< request[i][j] << " ";
        
        cout<<endl;
    }
    return 0;
}
